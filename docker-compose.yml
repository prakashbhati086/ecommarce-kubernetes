services:
  user-service:
    build: 
      context: ./user-service
      dockerfile: Dockerfile
    image: prakashbhati086/user-service:latest
    container_name: user-service
    ports:
      - "5001:5001"
    environment:
      - FLASK_ENV=development
      - PYTHONUNBUFFERED=1
    volumes:
      - user-data:/app/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/health"]
      interval: 30s
      timeout: 10s
      start_period: 60s
      retries: 3
    restart: unless-stopped
    networks:
      - microservices-network

  order-service:
    build:
      context: ./order-service
      dockerfile: Dockerfile
    image: prakashbhati086/order-service:latest
    container_name: order-service
    ports:
      - "5002:5002"
    environment:
      - NODE_ENV=development
      - USER_SERVICE_URL=http://user-service:5001
    volumes:
      - order-data:/app/data
    depends_on:
      user-service:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5002/health"]
      interval: 30s
      timeout: 10s
      start_period: 60s
      retries: 3
    restart: unless-stopped
    networks:
      - microservices-network

  payment-service:
    build:
      context: ./payment-service
      dockerfile: Dockerfile
    image: prakashbhati086/payment-service:latest
    container_name: payment-service
    ports:
      - "5003:5003"
    environment:
      - SPRING_PROFILES_ACTIVE=development
      - JAVA_OPTS=-Xmx512m -Xms256m
    depends_on:
      - user-service
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5003/health"]
      interval: 30s
      timeout: 10s
      start_period: 120s  # Java apps take longer to start
      retries: 5
    restart: unless-stopped
    networks:
      - microservices-network

  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    image: prakashbhati086/api-gateway:latest
    container_name: api-gateway
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=development
      - USER_SERVICE_URL=http://user-service:5001
      - ORDER_SERVICE_URL=http://order-service:5002
      - PAYMENT_SERVICE_URL=http://payment-service:5003
    depends_on:
      user-service:
        condition: service_healthy
      order-service:
        condition: service_healthy
      payment-service:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      start_period: 60s
      retries: 3
    restart: unless-stopped
    networks:
      - microservices-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: prakashbhati086/frontend:latest
    container_name: frontend
    ports:
      - "3000:80"  # Frontend Dockerfile serves on port 80 via nginx
    environment:
      - REACT_APP_API_URL=http://localhost:8080
    depends_on:
      api-gateway:
        condition: service_started  # Frontend doesn't need health check dependency
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      start_period: 60s
      retries: 3
    restart: unless-stopped
    networks:
      - microservices-network

# Volumes for persistent data
volumes:
  user-data:
    driver: local
  order-data:
    driver: local

# Network for service communication
networks:
  microservices-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
