version: '3.8'

services:
  user-service:
    build: ./user-service
    ports:
      - "5001:5001"
    volumes:
      - user-data:/app/data
    environment:
      - FLASK_ENV=development
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - microservices-network

  order-service:
    build: ./order-service
    ports:
      - "5002:5002"
    volumes:
      - order-data:/app/data
    depends_on:
      user-service:
        condition: service_healthy
    environment:
      - NODE_ENV=development
      - USER_SERVICE_URL=http://user-service:5001
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - microservices-network

  payment-service:
    build: ./payment-service
    ports:
      - "5003:5003"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5003/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - microservices-network

  api-gateway:
    build: ./api-gateway
    ports:
      - "8080:8080"
    depends_on:
      user-service:
        condition: service_healthy
      order-service:
        condition: service_healthy
      payment-service:
        condition: service_healthy
    environment:
      - USER_SERVICE_URL=http://user-service:5001
      - ORDER_SERVICE_URL=http://order-service:5002
      - PAYMENT_SERVICE_URL=http://payment-service:5003
    networks:
      - microservices-network

  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    depends_on:
      - api-gateway
    environment:
      - REACT_APP_API_URL=http://localhost:8080
    networks:
      - microservices-network

volumes:
  user-data:
  order-data:

networks:
  microservices-network:
    driver: bridge
